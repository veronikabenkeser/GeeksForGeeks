   static void BSTtoLL(Node root) {
        Node[] head = new Node[1];
        Node[] tail = new Node[1];
        makeIntoLL(root, tail, head);
        tail[0].right = head[0];
        head[0].left = tail[0];
        print(head[0]);
    }

    static void print(Node node){
        Node start = node;
        while(!start.equals(node.right)){
            System.out.print(node.val+" ");
            node = node.right;
        }
        System.out.print(node.val);
    }

    static void makeIntoLL(Node root, Node[] prev, Node[] head){
        if(root == null){
            return; 
        }
         //Make the leftmost node the head
        if(root.left == null && head[0] == null){
             head[0] = root;
        }
        makeIntoLL(root.left, prev, head);
        
        if(prev[0] != null){
            prev[0].right = root;
            root.left = prev[0];
            prev[0] = root;
        } else {
            prev[0] = root;
        }
        makeIntoLL(root.right, prev, head); 
    }
